digraph Groph {
	compound=true;

	graph [label="groph package dependency sketch"]
	node [shape=tab,style=filled,fillcolor=white];
	edge [arrowhead=vee, style=dashed];
	
	groph;
	util [label="groph/util"];
	io [label="groph/util/io"];
	gv [label="groph/util/graphviz"];
	tst [label="groph/tests"];
	
	subgraph cluster_g {
		color=white;
		style=filled;
		fillcolor=lightgrey;
		label="Graph Implementations";
		labeljust=r;
		amx [label="groph/adjmatrix"];
		som [label="groph/sliceofmaps"];
		getc [label="…"];
	}
	amx -> groph [ltail=cluster_g];
	som -> tst [ltail=cluster_g];

	subgraph cluster_a {
		color=white;
		style="filled";
		fillcolor=lightgrey;
		label="Algorithms";
		trv [label="groph/traversal"];
		shp [label="groph/shortestpath"];
		tsp [label="groph/tsp"];
		mst [label="groph/minspantree"];
		aetc [label="…"];

		tsp -> shp
	}
	shp -> groph [ltail=cluster_a];
	aetc -> som [lhead=cluster_g, ltail=cluster_a];
	
	util -> groph;
	io -> util, groph;
	io -> getc [lhead=cluster_g, color=gray];
	gv -> util, groph;
	gv -> getc [lhead=cluster_g, color=gray];
	
	tst -> groph;
}
